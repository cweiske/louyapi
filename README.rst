===================================
louyapi - Local OUYA API server app
===================================

An application for the OUYA that runs an OUYA API server.
With it, the OUYA brings its own API server it can talk to.

Game detail pages and the disover store are served by the OUYA itself.
Only images and .apk files are requested from http://statics.ouya.world

It utilizes the static API files generated by stouyapi__
from the `OUYA game meta data repository`__

__ https://github.com/cweiske/stouyapi/
__ https://github.com/ouya-saviors/ouya-game-data


Development
===========

Building stouyapi files
-----------------------
``git clone`` the game data and stouyapi repositories.
Then generate the API files::

  $ cd stouyapi
  $ ./bin/clean-generated-keep-qr.sh
  $ ./bin/import-game-data.php --mini --noqr ../game-data/folders

Now copy the generated files into louyapi's ``src/main/assets/stouyapi-www/``
directory:

  $ cd louyapi
  $ ./bin/copy-from-stouyapi.sh

Now the apk can be compiled.


Building a release
------------------
At first add a path to a signing configuration file into ``gradle.properties``::

  signingconfigfile=/path/to/signing-config.gradle

The signing configuration file should look as shown in
`Handling signing configs with Gradle`__

__ https://www.timroes.de/2013/09/22/handling-signing-configs-with-gradle/


Now build the signed apk file in ``build/outputs/apk/release/louyapi-release.apk``::

   $ ./gradlew assembleRelease


Helpful information for implementation
======================================
- https://github.com/NanoHttpd/nanohttpd/tree/nanohttpd-project-2.3.1
- https://fabcirablog.weebly.com/blog/creating-a-never-ending-background-service-in-android


About louyapi
=============
``louyapi`` was written by Christian Weiske, cweiske+ouya@cweiske.de.


License
-------
``louyapi`` is licensed under the AGPL v3.
